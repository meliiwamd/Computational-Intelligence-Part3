FUNCTION_BLOCK Inverted_Pendulum

    VAR_INPUT
        theta : REAL;
        theta_dot : REAL;
    END_VAR

    VAR_OUTPUT
        f : REAL;
    END_VAR



    FUZZIFY theta
        TERM down :=  (0,1) (45, 0) (315, 0) (360, 1);
        TERM down_right := (0, 0) (45, 1) (90, 0);
        TERM right := (45, 0) (90, 1) (135, 0);
        TERM up_right := (90, 0) (135, 1) (180, 0);
        TERM up_close_right := (178, 0) (179, 1) (180, 0);
        TERM up := (135, 0) (180, 1) (225, 0);
        TERM up_left := (180, 0) (225, 1) (270, 0);
        TERM up_close_left := (180, 0) (181, 1) (182, 0);
        TERM left := (225, 0) (270, 1) (315, 0);
        TERM down_left := (270, 0) (315, 1) (360, 0);

        TERM exact := (178, 0) (180, 1) (182, 0);
    END_FUZZIFY

    FUZZIFY theta_dot
        TERM clock_fast := (-10, 1) (-5, 0);
        TERM clock_slow := (-10, 0) (-5, 1) (0, 0);
        TERM stop := (-5, 0) (0, 1) (5, 0);
        TERM uclock_slow := (0, 0) (5, 1) (10, 0);
        TERM uclock_fast := (5, 0) (10, 1);

        TERM exact := (-1, 0) (0, 1) (1, 0);
    END_FUZZIFY

    DEFUZZIFY f
        TERM reverse_very_high := (-200, 0) (-150, 1) (-0, 0);
        TERM reverse_high := (-30, 0) (-20, 1) (-10, 0);
        TERM reverse_low := (-20, 0) (-10, 1) (0, 0) ;
        TERM stop := (-10, 0) (0, 1) (10, 0) ;
        TERM low := (0, 0) (10, 1) (20, 0) ;
        TERM high := (10, 0) (20, 1) (30, 0);
        TERM very_high := (200, 0) (150, 1) (0, 0);

        TERM zero := (-0.000000000000001, 0) (0, 1) (0.000000000000001, 0);

        ACCU:MAX;
        METHOD: COG;
        DEFAULT := 0;
    END_DEFUZZIFY

    RULEBLOCK Inverted_Pendulum
        AND : MIN;
        OR : MAX;

        RULE 0: IF (theta IS up AND theta_dot IS stop)
        OR (theta IS up_right AND theta_dot IS uclock_slow)
        OR (theta IS up_left AND theta_dot IS clock_slow)
        THEN f IS stop;

        RULE 1: IF
        (theta IS down AND theta_dot IS clock_slow)
        OR (theta IS left AND theta_dot IS clock_fast)
        THEN f IS high;

        RULE 2: IF
        (theta IS down AND theta_dot IS uclock_slow)
        OR (theta IS right AND theta_dot IS uclock_fast)

        THEN f IS reverse_high;

        RULE 3: IF (theta IS down_left AND theta_dot IS clock_fast)
        OR (theta IS down AND theta_dot IS clock_fast)
        OR (theta IS right AND theta_dot IS uclock_slow)
        OR (theta IS up AND theta_dot IS uclock_slow)

        THEN f IS reverse_low;

        RULE 4: IF (theta IS down_right AND theta_dot IS uclock_fast)
        OR (theta IS down AND theta_dot IS uclock_fast)
        OR (theta IS left AND theta_dot IS clock_slow)
        OR (theta IS up AND theta_dot IS clock_slow)

        THEN f IS low;

        RULE 5: IF (theta IS up_left AND theta_dot IS uclock_fast)
        THEN f IS reverse_very_high;

        RULE 6: IF (theta IS up_right AND theta_dot IS  clock_fast)
        THEN f IS very_high;

        RULE 7: IF (theta IS up_close_left AND theta_dot IS uclock_slow)
        THEN f IS reverse_very_high;

        RULE 8: IF (theta IS up_close_right AND theta_dot IS clock_slow)
        THEN f IS very_high;

        RULE 9: IF (theta IS exact AND theta_dot IS exact)
        THEN f IS zero;


    END_RULEBLOCK

END_FUNCTION_BLOCK
